===================================================================
1. program  to find whether a number is odd or even 

lets take a number

num = 13
mask = 0x1

lets display both these in bits


num  & mask == 0 if its even
//  check_odd_even(num)



====================================================================


2. clear rightmost 1 bit  ... to find the pos of rightmost set bit
--------------------------
//clear_rightmost_bit(n)

//pos_rightmost_set_bit(n)
-------------------------
 n & (n-1)


display n
display n-1

display n & n-1
display n & ~ (n-1)
====================================================================
3. whether a num is pow of 2 or not

if (n&(n-1))==0 pow of 2 else not a pow of 2

--------------------
//check_powof_2(n)


====================================================================
4. count set bits


count++
x =x &(x-1)  //clears the roght most bit efficient as it straightaway skips to check  zero bits 

-----------------
//count_set_bits(x)
====================================================================




